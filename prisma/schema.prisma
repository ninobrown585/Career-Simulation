// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  userId          Int         @id @default(autoincrement())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  firstName       String?     @db.VarChar(255)
  lastName        String?     @db.VarChar(255)
  username        String      @unique @db.VarChar(255)
  password        String      @db.VarChar(255)
  email           String      @db.VarChar(255)
  streetAddress   String?     @db.VarChar(255)
  city            String?     @db.VarChar(255)
  zipcode         String?     @db.VarChar(255)
  phone           String?     @db.VarChar(255)
  reviews         review[]
  comments        comment[]
}

model item {
  itemId          Int         @id @default(autoincrement())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  name            String      @db.VarChar(255)
  imageUrl        String      @db.VarChar(255)
  description     String      @db.VarChar(255)
  category        String      @db.VarChar(255)
  reviews         review[]
}

model review {
  reviewId        Int         @id @default(autoincrement())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  userId          Int         
  user            user        @relation(fields: [userId], references: [userId])
  itemId          Int         
  item            item        @relation(fields: [itemId], references: [itemId])
  text            String      @db.VarChar(255)
  score           Int         
  comments        comment[]
}

model comment {
  commentId       Int         @id @default(autoincrement())
  reviewId        Int
  review          review      @relation(fields: [reviewId], references: [reviewId])
  userId          Int
  user            user        @relation(fields: [userId], references: [userId])
  text            String      @db.VarChar(255)
}